{
  "version": 3,
  "file": "UnitTester.test.js",
  "sourceRoot": "..\\",
  "sources": [
    "test\\UnitTester.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# UnitTester.test.coffee\n\nimport {undef} from '@jdeighan/base-utils'\nimport {\n\tUnitTester, UnitTesterNorm, utest,\n\t} from '@jdeighan/unit-tester'\n\nnonorm = new UnitTester()\nnorm = new UnitTesterNorm()\n\nutest.equal 11, 42, 42\nutest.equal 12, 40 + 2, 42\nutest.notequal 13, 40 + 3, 42\n\nutest.equal 15, [2,3], [2,3]\nutest.notequal 16, [2,3], [2,4]\nutest.equal 17, {a:1, b:2}, {a:1, b:2}\nutest.notequal 18, {a:1, b:2}, {a:1, b:3}\n\nutest.different 20, [2,3], [2,3]\n\nutest.fails 22,    () -> throw \"not OK\"\nutest.succeeds 23, () -> return 42\n\nutest.fails 25,    () -> throw new Error('bad')\nutest.succeeds 26, () -> return 'abc'\nutest.succeeds 27, () -> return 42\n\nutest.truthy 29, true\nutest.truthy 30, 1\nutest.truthy 31, 'abc'\nutest.truthy 32, ['abc']\n\nutest.falsy 34, false\nutest.falsy 35, 0\nutest.falsy 36, ''\nutest.falsy 37, undef\n\n(() =>\n\tresult = true\n\tutest.truthy 41, result\n\t)()\n\n(() =>\n\tresult = false\n\tutest.falsy 46, result\n\t)()\n\nutest.truthy 49, 99\nutest.falsy 50, 0\nutest.truthy 51, 'abc'\nutest.falsy 52, ''\n\n# --- with nonorm\n\nnonorm.truthy 56, true\nnonorm.falsy 57, false\n\n(() =>\n\tresult = true\n\tnonorm.truthy 61, result\n\t)()\n\n(() =>\n\tresult = false\n\tnonorm.falsy 66, result\n\t)()\n\nnonorm.truthy 69, 99\nnonorm.falsy 70, 0\nnonorm.truthy 71, 'abc'\nnonorm.falsy 72, ''\n\n# --- Normalization:\nnorm.equal 75, \"  abc   xyz   \", \"abc xyz\"\nnonorm.notequal 76, \"  abc   xyz   \", \"abc xyz\"\nnonorm.notequal 77, \"  abc xyz   \", \"abc xyz\"\nnonorm.notequal 78, \"abc   xyz\", \"abc xyz\"\n\n# --- Duplicate line numbers are not a problem\nutest.truthy 81, 9999\n\n# ---------------------------------------------------------------------------\n# test like, unlike\n\nutest.like 86, {a:1, b:2}, {a:1}\nutest.unlike 87, {a:1, b:2}, {c:3}\nutest.unlike 88, {a:1, b:2}, {a:2}\n\nutest.like 90, [{a:1, b:2}, {a:3, c:5}], [{a:1}, {a:3}]\nutest.unlike 91, [{a:1, b:2}], [{a:1}, {a:3}]\nutest.unlike 92, [{a:1, b:2}, {a:3, c:5}], [{a:1}]\nutest.unlike 93, [{a:1, b:2}, {a:3, c:5}], [{a:1}, {a:4}]\nutest.unlike 94, [{a:1, b:2}, {a:3, c:5}], [{a:1}, {b:3}]\n\nutest.like 96, {a:1, b:2}, {a:1, b:2}\nutest.like 97, {a:1, b:2}, {a:1}\nutest.unlike 98, {a:1}, {a:1, b:2}\n\n# ---------------------------------------------------------------------------\n\n# test defined, notdefined\n\nutest.defined 104, 23\nutest.defined 105, 'abc'\nutest.notdefined 106, undef\nutest.notdefined 107, null\n\n# ---------------------------------------------------------------------------\n\n# test about, notabout\n\nutest.about 113, 3.14159, 3.14158\nutest.notabout 114, 3.14159, 42\n\n# ---------------------------------------------------------------------------\n# --- Create custom unit testers\n\n(() ->\n\t# --- Value is transformed by converting to upper case\n\n\tclass CustomTester extends UnitTesterNorm\n\t\ttransformValue: (input) -> return input.toUpperCase()\n\n\tcustom = new CustomTester()\n\tcustom.equal 126, 'abc', 'ABC'\n\tcustom.equal 127, '  abc  ', 'ABC'\n\t)()\n\n(() ->\n\t# --- Value is tripled\n\n\tclass CustomTester extends UnitTesterNorm\n\t\ttransformValue: (input) -> return 3 * input\n\n\tcustom = new CustomTester()\n\tcustom.equal 137, 2, 6\n\tcustom.equal 138, 5, 15\n\t)()\n\n(() ->\n\t# --- Transform both value and expected\n\t#     Parse string as a number, then floor() number\n\n\tclass CustomTester extends UnitTesterNorm\n\t\ttransformValue: (str) -> return Math.floor(parseFloat(str))\n\t\ttransformExpected: (str) -> return Math.floor(parseFloat(str))\n\n\tcustom = new CustomTester()\n\tcustom.equal 150, \" 3.14159 \", \"3.9\"\n\t)()\n\n(() ->\n\t# --- override initialize()\n\n\tclass CustomTester extends UnitTesterNorm\n\t\tinitialize: () ->\n\t\t\t@h = {\n\t\t\t\tx: 0\n\t\t\t\ty: 1\n\t\t\t\tmeaningOfLife: 42\n\t\t\t\t}\n\t\ttransformValue: (str) -> return @h[str]\n\n\tcustom = new CustomTester()\n\tcustom.equal 166, 'meaningOfLife', 42\n\t)()\n"
  ]
}